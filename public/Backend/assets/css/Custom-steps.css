*,
*:before,
*:after {
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

.Stapes_wrap {
    border: 1px solid red;
    height: 80vh;
    max-height: 100%;
    padding: 0 1rem;
}


.breadcrumb_config {
    /*centering*/
    display: flex;
    box-shadow: 0 0 15px 1px rgba(0, 0, 0, 0.2);
    overflow: hidden;
    border-radius: 5px;
    /*Lets add the numbers for each link using CSS counters. flag is the name of the counter. to be defined using counter-reset in the parent element of the links*/
    counter-reset: flag;
    width: 100%;
}

.breadcrumb_config a {
    text-decoration: none;
    outline: none;
    display: flex;
    font-size: 12px;
    padding: 0 10px 0 60px;
    position: relative;
    align-items: center;
}


.breadcrumb_config a {
    flex: 1;
    height: 36px;
    max-height: 100%;
}

/*since the first link does not have a triangle before it we can reduce the left padding to make it look consistent with other links*/
.breadcrumb_config a:first-child {
    padding-left: 46px;
    border-radius: 5px 0 0 5px;
    /*to match with the parent's radius*/
}

.breadcrumb_config a:first-child:before {
    left: 14px;
}

.breadcrumb_config a:last-child {
    border-radius: 0 5px 5px 0;
    /*this was to prevent glitches on hover*/
    padding-right: 20px;
}

/*hover/active styles*/
.breadcrumb_config a.active {
    background: #333;
    background: linear-gradient(#333, #000);
}

.breadcrumb_config a.active:after {
    background: #333;
    background: linear-gradient(135deg, #333, #000);
}

/*adding the arrows for the breadcrumbs using rotated pseudo elements*/
.breadcrumb_config a:after {
    content: '';
    position: absolute;
    top: 0;
    right: -18px;
    /*half of square's length*/
    /*same dimension as the line-height of .breadcrumb_config a */
    width: 36px;
    height: 36px;
    /*as you see the rotated square takes a larger height. which makes it tough to position it properly. So we are going to scale it down so that the diagonals become equal to the line-height of the link. We scale it to 70.7% because if square's: 
	length = 1; diagonal = (1^2 + 1^2)^0.5 = 1.414 (pythagoras theorem)
	if diagonal required = 1; length = 1/1.414 = 0.707*/
    transform: scale(0.707) rotate(45deg);
    /*we need to prevent the arrows from getting buried under the next link*/
    z-index: 1;
    /*background same as links but the gradient will be rotated to compensate with the transform applied*/
    background: #666;
    background: linear-gradient(135deg, #666, #333);
    /*stylish arrow design using box shadow*/
    box-shadow:
        2px -2px 0 2px rgba(0, 0, 0, 0.4),
        3px -3px 0 2px rgba(255, 255, 255, 0.1);
    /*
		5px - for rounded arrows and 
		50px - to prevent hover glitches on the border created using shadows*/
    border-radius: 0 5px 0 50px;
}

/*we dont need an arrow after the last link*/
.breadcrumb_config a:last-child:after {
    content: none;
}

/*we will use the :before element to show numbers*/
.breadcrumb_config a:before {
    content: ' ';
    display: flex;
    align-items: center;
    justify-content: center;
    /*some styles now*/
    border-radius: 100%;
    width: 20px;
    height: 20px;
    line-height: 20px;
    margin: 8px 0;
    position: absolute;
    top: 0;
    left: 30px;
    background: #444;
    background: linear-gradient(#444, #222);
    font-weight: bold;
}




.breadcrumb_config a:nth-child(1):before{
    content: '1';
} 
.breadcrumb_config a:nth-child(2):before{
    content: '2';
} 
.breadcrumb_config a:nth-child(3):before{
    content: '3';
} 
.breadcrumb_config a:nth-child(4):before{
    content: '4';
} 



.flat_config a,
.flat_config a:after {
    background: white;
    color: black;
    transition: all 0.5s;
}

.flat_config a:before {
    background: white;
    box-shadow: 0 0 0 1px #ccc;
}

.flat_config a.active,
.flat_config a.active:after {
    background: #9EEB62;
}



/* ===============me Coustome Css===================== */

.action_wrap {
    margin-top: 20%;
    text-align: end;
}







/* ============Final css============== */

.stapes_container {
    height: fit-content;
}


/* 
.isDone {
    background: green !important;
} */







/* Test============ */









.theme-wizard .nav-link .nav-item-circle {
    height: 2rem !important;
    width: 2rem !important;
    display: flex;
    justify-content: center;
    align-items: center;
}




.btn-box {
    width: 100%;
    display: flex;
    justify-content: space-evenly;
    margin-bottom: 2rem;
}




.btn-box button {
    width: 110px;
    height: 35px;
    margin: 0 10px;
    background: linear-gradient(to right, #ff105f, #ffad06);
    border-radius: 30px;
    border: 0;
    outline: none;
    color: #fff;
    cursor: pointer;
}

.flat_config a.navActive,
.flat_config a.navActive:after {
    transition: background 2s linear;
    background:linear-gradient(to right, #fff 50%, #9EEB62 50%);
   background-size:200% 100%;
   background-position:0 0;
   transition:background-position .3s ease-in-out;
   background-position:-100% 0;
}


.theme-wizard .nav-link.nestedDone {
    color: #00d27a;
}

.isActives .nestedActive {
    color: #2c7be5 !important;
}

.isActives .nestedActiveBg {
    color: #000 !important;
    background: #2c7be5 !important;
}

.isDone .nav-item-circle-parent:before,
.isDone .nav-link .nav-item-circle {
    background: #00d27a !important;
    color: #fff;
}


.isActives .nav-item-circle-parent:before{
    background: linear-gradient(90deg, rgba( 0,210,122,1) 46%, rgb(216,226,239)48%, rgb(216,226,239) 100%) !important;
    color: #fff;
}



.nestedContent {
    display: none;
}

.nestedContent.showContetn {
    display: block !important;
}


.some-content {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
}

.nested-stape-wrap {
    flex: 1;
    width: 100%;
    height: 100%;
    display: none;
}

.show_main-contetn {
    display: block !important;
}


/* Human Body css Svg */

/* *,::after,::before{
    margin: 0;padding: 0;box-sizing: border-box;
}

body{
    height: 100vh;
    width: 100vh;
}
img{
    width: 100%;
    height: 100%;
} */


svg {
    width: 100%;
    height: 100vh;
    position: relative;
}
circle {
    width:3vh;
    height:3vh;
    position:absolute;
    z-index:8;
    display:block;
    stroke-width:1px;
    stroke:rgba(255, 255, 255, .9);
    fill: rgba(240, 0, 0, .8);

    animation-name: stretch;
    animation-duration: 2s;
    animation-timing-function: ease-out;
    animation-delay: 0;
    animation-direction: alternate;
    animation-iteration-count: infinite;
    animation-fill-mode: none;
    animation-play-state: running;

}
@keyframes stretch {
    0% {
        stroke-opacity:1 ;
        
    }
    50% {
        stroke-opacity:0.1 ;
        
    }
    100% {
       
        stroke-opacity:1 ;

    }
}

/* injuryPoint Circle Css */
text{
   font:bold  2.1px sans-serif;
   fill: #000000;
   stroke-width:.01px;
   stroke: rgb(255, 0, 0);  
   z-index:18;

}

.UrTavla{
    opacity: 0;
}

.visible{
    opacity: 1;
}

.visible text{
    animation: weel .5s linear both;
}

@keyframes weel {
    0%{
        font:bold  5px sans-serif;
    }
    100%{
        font:bold  2.1px sans-serif;
    }
}


/* Button Css  */
.bord{
    background-color: red; 

    margin: 0 auto;
    height: 200px;
    width: 400px;
    display: flex;
    /* justify-content: center; */
    flex-wrap: wrap;
    /* align-items: center; */
    
}

.bord button{
    font-size: 20px;
    height: fit-content;
    padding: .6rem;
    margin-right: 0.2rem;

}

/* body Content data CSS  ==================*/
.custome_container{

}
.human_body_wrap{
    gap: 1rem;
    margin-bottom: 1rem;
}
.h-Border{
   border: 1px solid lightgray; 
   padding: .6rem;
}

.NATUREOFINJURY {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}
.NATUREOFINJURY > p,.h-Border > p{
    background: #9365fb36;
    flex-grow: 1;
    width: 100%;
    margin-bottom: 0;
    font-size: 1.2rem;
    font-weight: 600;
    padding: .4rem 1rem;
}
.h-Border > p{
    margin-bottom: .5rem !important;
}
.h-Border > div{
    border-bottom: 1px solid lightgray;
}

.stpes_wrap-2 > div tr td:nth-child(2),
    .stpes_wrap-2 > div tr th:nth-child(2) {
    border-left:2px solid lightgray ;
}

@media screen and (min-width: 1400px){
    .custome_container{
        width: 80%;
        margin: 0 auto !important;
    }
}
@media screen and (max-width: 1399px){
    .custome_container{
       padding: 0 1rem;
    }

    .human_body_wrap{
        align-items: flex-start;
    }
    .human_body_wrap > div:nth-child(1){
        flex: .4;
    }
    .human_body_wrap > div:nth-child(2){
        flex: .6;
    }

}

@media screen and (max-width: 950px){
    svg{
        height: fit-content !important;
        min-height: 400px;  
    }
    .svg_container{
        margin: 0 auto !important;
        width: fit-content;
        height: fit-content;
    }
    .human_body_wrap{
        flex-direction: column-reverse;
    }
    .h-Border > div{
        border-bottom: 0;
    }
    .h-Border {
        padding: .6rem;
        display: flex;
        flex-wrap: wrap;
        gap: .5rem;
    }
    .human_body_wrap > div:nth-child(1){
        flex: 1;
    }
    .human_body_wrap > div:nth-child(2){
        flex: 1;
        margin: 0 auto;
    }
}